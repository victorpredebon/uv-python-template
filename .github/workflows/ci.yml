name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache uv
        id: cache-uv
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
      - name: Install uv
        if: steps.cache-uv.outputs.cache-hit != 'true'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('**/pyproject.toml') }}
      - name: Install dependencies
        run: |
          uv sync
      - name: Run pre-commit
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          uv run pre-commit run --all-files

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache uv
        id: cache-uv
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
      - name: Install uv
        if: steps.cache-uv.outputs.cache-hit != 'true'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('**/pyproject.toml') }}
      - name: Install dependencies
        run: |
          uv sync
      - name: Run tests
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          uv run pytest --cov=. --cov-report=xml --cov-fail-under=90
